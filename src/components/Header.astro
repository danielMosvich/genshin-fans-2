---
import NavButton from "./NavButton.astro";
const themes = ["light", "dark"];
const theme = Astro.cookies.get("theme")?.value;
// console.log(theme)
// const theme = 'light'
---

<header
  class="bg-white/80 dark:bg-neutral-900/80 backdrop-blur-xl w-full fixed flex gap-10 justify-center z-40 h-14"
>
  <div class="h-full w-full max-w-5xl mx-auto py-2">
    <div class="flex justify-between gap-3 items-center">
      <!-- url -->
      <a href="/" class="flex gap-3 items-center">
        <div
          class="w-10 shadow-sm rounded-lg bg-gradient-to-t from-[#3b82f6] to-[#38bdf8] p-[2px]"
        >
          <img src="/logo.svg" alt="xd" />
        </div>
        <p class="font-[800] text-xl text-neutral-700">
          Genshin <label
            class="bg-gradient-to-t from-[#3b82f6] to-[#38bdf8] bg-clip-text text-transparent capitalize text-center"
            >Fans</label
          >

          <!-- <h2 class="text-rose-500 text-5xl font-bold text-center">GIF</h2> -->
        </p>
      </a>

      <!-- NAV -->
      <nav class="flex gap-3 items-center">
        <NavButton link="/">Home</NavButton>
        <NavButton link="/characters">Characters</NavButton>
        <NavButton link="/weapons">Weapons</NavButton>
      </nav>
      <div class="flex flex-wrap gap-4 justify-center">
        <button
          id="button-light"
          class={`button-light bg-red-500 ${theme === "dark" && "hidden"}`}
          >light</button
        >
        <button
          id="button-dark"
          class={`button-dark bg-red-500 ${theme === "light" && "hidden"}`}
          >dark</button
        >
      </div>
    </div>
  </div>
  <script is:inline>
    let initCookkie = document.cookie;
    if (!initCookkie) {
      function InitPage() {
        function saveThemeInit(theme) {
          const d = new Date();
          d.setTime(d.getTime() + 365 * 86400000);
          document.cookie = `theme=${theme};expires=${d.toUTCString()}`;
        }
        if (
          window.matchMedia &&
          window.matchMedia(`(prefers-color-scheme:dark)`).matches
        ) {
          saveThemeInit("dark");
          let dark = document.querySelector(".button-dark");
          let light = document.querySelector(".button-light");
          dark.classList.remove("hidden");
          light.classList.add("hidden");
          document.documentElement.classList.add("dark")
        } else {
          saveThemeInit("light");
          let dark = document.querySelector(".button-dark");
          let light = document.querySelector(".button-light");
          dark.classList.add("hidden");
          light.classList.remove("hidden");
          document.documentElement.classList.remove("dark")
        }
      }
      InitPage();
    }

    document.addEventListener("astro:page-load", () => {
      const buttonLight = document.querySelector("#button-light");
      const buttonDark = document.querySelector("#button-dark");
      function saveTheme(theme) {
        const d = new Date();
        d.setTime(d.getTime() + 365 * 86400000);
        document.cookie = `theme=${theme};expires=${d.toUTCString()}`;
      }
      function changeTheme(theme) {
        if (theme === "dark") {
          document.documentElement.classList.add(theme);
          saveTheme(theme);
          buttonDark?.classList.remove("hidden");
          buttonLight?.classList.add("hidden");
        } else if (theme === "light") {
          document.documentElement.classList.remove("dark");
          saveTheme(theme);
          buttonDark?.classList.add("hidden");
          buttonLight?.classList.remove("hidden");
        } else if (theme === "system") {
          if (
            window.matchMedia &&
            window.matchMedia(`(prefers-color-scheme:dark)`).matches
          ) {
            saveTheme("dark");
            buttonDark?.classList.remove("hidden");
            buttonLight?.classList.add("hidden");
          } else {
            saveTheme("light");
            buttonDark?.classList.add("hidden");
            buttonLight?.classList.remove("hidden");
          }
        }
      }
      buttonLight?.addEventListener("click", () => {
        changeTheme("dark");
      });
      buttonDark?.addEventListener("click", () => {
        changeTheme("light");
      });
      window.addEventListener("DOMContentLoaded", () => {
        const cookies = document.cookie;

        // console.log("XD?")
        if (cookies) {
          const match = cookies.match("theme=([^;]+)");
          console.log(match);
          let theme = match[1];
          changeTheme(theme);
        } else {
          if (
            window.matchMedia &&
            window.matchMedia(`(prefers-color-scheme:dark)`).matches
          ) {
            changeTheme("dark");
          } else {
            changeTheme("light");
          }
        }
      });
    });
  </script>
</header>
